name: 'Accuknox IaC Scan'
description: 'Run Scan against infrastructure as code.'
inputs:
  file:
    description: 'File with infrastructure code or packages to scan'
    required: false
  directory:
    default: '.'
    description: 'Directory with infrastructure code and/or package manager files to scan'
    required: false
  compact:
    description: 'Do not display code blocks in output'
    required: false
  quiet:
    description: 'display only failed checks'
    required: false
  output_format:
    description: 'The format of the output. cli, json, junitxml, github_failed_only, or sarif (comma separated)'
    required: false
    default: 'json'
  output_file_path:
    description: 'Path and name for output file, needs to end with a comma for a single output format'
    required: false
  soft_fail:
    description: 'do not return an error code if there are failed checks'
    required: false
  framework:
    description: 'run only on a specific infrastructure'
    required: false
  skip_framework:
    description: 'skip a specific infrastructure'
    required: false
  github_pat:
    description: 'Environment variable name for a Github personal access token for scanning external modules sourced from private repositories'
    required: false
  enable_secrets_scan_all_files:
    description: 'Scan all files for secrets'
    required: false
  token:
    description: 'The token for authenticating with the CSPM panel.'
    required: true
  tenant_id:
    description: 'The ID of the tenant associated with the CSPM panel.'
    required: true
  endpoint:
    description: 'The URL of the CSPM panel to push the scan results to.'
    required: true
    default: 'cspm.demo.accuknox.com'
runs:
  using: 'composite'
  steps: 
      - name: Install Checkov
        run: pip install checkov > /dev/null
        shell: bash

      - name: Run IaC Scan
        run: |
          checkov -d . --quiet -o json > scan_results.json || true
        shell: bash 
        
      - name: Print IaC Scan Results
        run: cat scan_results.json
        shell: bash
        
      - name: Push report to CSPM panel
        run: |
          curl --location --request POST 'https://${{ inputs.endpoint }}/api/v1/artifact/?tenant_id=${{ inputs.tenant_id }}&data_type=IAC&save_to_s3=false' --header 'Tenant-Id: ${{ inputs.tenant_id }}' --header 'Authorization: Bearer ${{ inputs.token }}' --form 'file=@"./scan_results.json"'
        shell: bash
        
      - name: Remove temporary files
        run: |
          rm scan_results.json
        shell: bash

        
branding:
  icon: 'shield'
  color: 'purple'
